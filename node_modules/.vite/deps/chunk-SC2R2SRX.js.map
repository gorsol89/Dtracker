{
  "version": 3,
  "sources": ["../../ol/structs/PriorityQueue.js", "../../ol/TileQueue.js", "../../ol/layer/Group.js", "../../ol/MapEventType.js"],
  "sourcesContent": ["/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n", "/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      },\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   * @override\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      /**\n       * @type {import(\"./Tile.js\").default}\n       */\n      const tile = this.dequeue()[0];\n      const tileKey = tile.getKey();\n      const state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n", "/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} GroupEventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {GroupEventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n", "/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n"],
  "mappings": "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",
  "names": []
}
